<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Orders</title>

    <script src="js-libs/jquery-3.5.1.js"></script>
    <script src="js-libs/dataTables.bootstrap5.min.js"></script>
    <script src="js-libs/jquery.dataTables.min.js"></script>

    <link href="stylesheets/bootstrap.min.css" rel="stylesheet">
    <link href="stylesheets/dataTables.bootstrap5.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link href="stylesheets/global.css" rel="stylesheet">


    <script>
        document.onreadystatechange = () => {
            document.getElementById("my-alert").style.display = "none";
            document.getElementById("orders").classList.add('active');
        };
        $(document).ready(function() {
            var url = location.protocol+'//' + location.host + '/api/orders';
            $('#datatable').DataTable({
                    createdRow: function( row, data, dataIndex ) {
                       $(row).attr("id","row"+data.id)
                    },
                    "stateSave": true,
                    "lengthMenu": [[5, 10, 20,100,500, -1], [5, 10, 20,100,500, 'All']],
                "ajax": {
                    "url": url,
                    "dataSrc": ""
                },
                
                "columns": [
                    {
                        "data": "order_number",
                        "render": function (data, type, row) {
                            return "#"+data;
                        }
                    },
                    {
                        "data": "first_name",
                        "render": function (data, type, row) {
                            return data+" "+row.last_name;
                        }
                    },
                    {
                        "data": "created_at",
                        "render": function (data, type, row) {
                            return formateDate(data);
                        }
                    },
                    {
                        "data": "order_state",
                        "render": function (data, type, row) {
                            return state(data);
                        }
                    },
                    {
                        "data": "id",
                        "render": function (data, type, row) {
                            if(row.order_state==0){
                                return '<span><a href="/line-items?order_id='+data+'" class="btn"><i class="fa fa-list" aria-hidden="true"></i></a> <a onclick="deliver(' + data + ')" class="btn"><i class="fa fa-truck" aria-hidden="true"></i></a><a id="delete-btn-id" onclick="refuse(' + data + ')" data-id="' + data + '"  class="btn deleteAction" ><i class="fa fa-close" aria-hidden="true"></i></a></span>';

                            }else{
                                return '<span><a href="/line-items?order_id='+data+'" class="btn"><i class="fa fa-list" aria-hidden="true"></i></a> </span>';
                            }
                        }
                    }
                ]
            });

        } );

        function formateDate(timestamp){
            var d = new Date(timestamp),
             dformat = [d.getMonth()+1,
               d.getDate(),
               d.getFullYear()].join('/')+' '+
              [d.getHours(),
               d.getMinutes(),
               d.getSeconds()].join(':');
               return dformat;
        }

        function state(data){
            if(data == -1){
                return '<p style="color: red;"> Refused </p>';
            }else if(data == 0){
                return ' <p style="color: orange;"> Pending </p>';
            }else{
                return '<p style="color: green;"> Delivered </p>'
            }
        }

        function refuse(id) {
            let isExecuted = confirm("Are you sure to delete this element?");
            if(isExecuted){
                var myHeaders = new Headers();
            myHeaders.append("Content-Type", "application/json");

            var raw = JSON.stringify({
                "id": id
            });

            var requestOptions = {
                method: 'POST',
                headers: myHeaders,
                body: raw,
                redirect: 'follow'
            };

            fetch(location.protocol+'//' + location.host+"/api/refuse-order", requestOptions)
                .then(response => {
                    if(response.status==200){
                        var myobj = document.getElementById("row"+id);
                        location.reload();
                    }else{

                        response.text().then(result=>{
                            document.getElementById("my-alert").innerText = result;
                            document.getElementById("my-alert").style.display = "block";
                            document.getElementById('my-alert').scrollIntoView();
                        })
                    }
                })
                .catch(error => {
                    document.getElementById("my-alert").innerText = "some thing went wrong";
                    document.getElementById("my-alert").style.display = "block";
                    document.getElementById('my-alert').scrollIntoView();
                });
            }
            
        }

        function deliver(id) {
            let isExecuted = confirm("Are you sure to delete this element?");
            if(isExecuted){
                var myHeaders = new Headers();
            myHeaders.append("Content-Type", "application/json");

            var raw = JSON.stringify({
                "id": id
            });

            var requestOptions = {
                method: 'POST',
                headers: myHeaders,
                body: raw,
                redirect: 'follow'
            };

            fetch(location.protocol+'//' + location.host+"/api/deliver-order", requestOptions)
                .then(response => {
                    if(response.status==200){
                        var myobj = document.getElementById("row"+id);
                        location.reload();
                    }else{

                        response.text().then(result=>{
                            document.getElementById("my-alert").innerText = result;
                            document.getElementById("my-alert").style.display = "block";
                            document.getElementById('my-alert').scrollIntoView();
                        })
                    }
                })
                .catch(error => {
                    document.getElementById("my-alert").innerText = "some thing went wrong";
                    document.getElementById("my-alert").style.display = "block";
                    document.getElementById('my-alert').scrollIntoView();
                });
            }
            
        }
    </script>
</head>
<body>

<div class="my-container">
    <div class="left-side">
        <% include side_bar.ejs %>
    </div>
    <div class="right-side">
        <div id="my-alert" class="alert alert-danger" role="alert">

        </div>
        
        <div class="dt-container">
            <table id="datatable" class="table table-striped" style="width:100%">
                <thead>
                <tr>
                    <th>Id</th>
                    <th>Customer</th>
                    <th>Created At</th>
                    <th>State</th>
                    <th>Action</th>
                </tr>
                </thead>
            </table>
        </div>
    </div>
</div>



</body>
</html>